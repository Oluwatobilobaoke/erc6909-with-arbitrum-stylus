/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface IERC6909  {
    function initialize(bytes32 name, bytes32 symbol) external;

    function name() external view returns (bytes32);

    function symbol() external view returns (bytes32);

    function decimals() external view returns (uint8);

    function mint(address to, uint256 id, uint256 value) external;

    function balanceOf(address owner, uint256 id) external view returns (uint256);

    function allowance(address owner, address spender, uint256 id) external view returns (uint256);

    function isOperator(address owner, address spender) external view returns (bool);

    function approve(address spender, uint256 id, uint256 value) external;

    function setOperator(address spender, bool approved) external;

    function transfer(address receiver, uint256 id, uint256 value) external;

    function transferFrom(address sender, address receiver, uint256 id, uint256 value) external;

    function burn(uint256 id, uint256 value) external;

    error ERC6909InsufficientBalance(address, uint256, uint256, uint256);

    error ERC6909InvalidSender(address);

    error ERC6909InvalidReceiver(address);

    error ERC6909InvalidApprover(address);

    error ERC6909InvalidSpender(address);

    error ERC6909InsufficientAllowance(address, uint256, uint256, uint256);
}
